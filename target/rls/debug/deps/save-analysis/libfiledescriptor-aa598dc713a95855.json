{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3","program":"/Users/bailej9/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","filedescriptor","--edition=2018","/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=aa598dc713a95855","-C","extra-filename=-aa598dc713a95855","--out-dir","/Users/bailej9/dev/personal/rusty_engine/target/rls/debug/deps","-L","dependency=/Users/bailej9/dev/personal/rusty_engine/target/rls/debug/deps","--extern","anyhow=/Users/bailej9/dev/personal/rusty_engine/target/rls/debug/deps/libanyhow-3f93790bcedddac8.rmeta","--extern","libc=/Users/bailej9/dev/personal/rusty_engine/target/rls/debug/deps/liblibc-15d2d814ab3b29ba.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/bailej9/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/bailej9/dev/personal/rusty_engine/target/rls/debug/deps/libfiledescriptor-aa598dc713a95855.rmeta"},"prelude":{"crate_id":{"name":"filedescriptor","disambiguator":[5947881710030629152,0]},"crate_root":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src","external_crates":[{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7777094053559708767,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10550174156715778454,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8770346864682343241,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8196830942918118636,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12786826162718588903,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7262382603413566750,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12233289566066112318,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4998072162051350919,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14817392966914922723,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13537029249427453884,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16172866892641339196,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[18226255698322429307,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[12872472635654720224,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[15477836623066676988,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8883445751219211826,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[4189598673803333586,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","num":17,"id":{"name":"anyhow","disambiguator":[1279169865741723640,0]}},{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","num":18,"id":{"name":"libc","disambiguator":[12534654182852295522,0]}}],"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":0,"byte_end":11822,"line_start":1,"line_end":324,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3050,"byte_end":3051,"line_start":102,"line_end":102,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"RawFileDescriptor, SocketDescriptor, poll_impl, HandleType, socketpair_impl, pollfd","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":0,"byte_end":11822,"line_start":1,"line_end":324,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":173},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":179},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":196}],"decl_id":null,"docs":" The purpose of this crate is to make it a bit more ergonomic for portable\n applications that need to work with the platform level `RawFd` and\n `RawHandle` types.","sig":null,"attributes":[{"value":"/ The purpose of this crate is to make it a bit more ergonomic for portable","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ applications that need to work with the platform level `RawFd` and","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":78,"byte_end":148,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/ `RawHandle` types.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":149,"byte_end":171,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":172,"byte_end":175,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Rather than conditionally using `RawFd` and `RawHandle`, the `FileDescriptor`","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":176,"byte_end":257,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ type can be used to manage ownership, duplicate, read and write.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":258,"byte_end":326,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":327,"byte_end":330,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## FileDescriptor","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":331,"byte_end":352,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":353,"byte_end":356,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is a bit of a contrived example, but demonstrates how to avoid","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":357,"byte_end":428,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/ the conditional code that would otherwise be required to deal with","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":429,"byte_end":499,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ calling `as_raw_fd` and `as_raw_handle`:","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":500,"byte_end":544,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":545,"byte_end":548,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":549,"byte_end":556,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use filedescriptor::{FileDescriptor, FromRawFileDescriptor};","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":557,"byte_end":621,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":622,"byte_end":645,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":646,"byte_end":649,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn get_stdout() -> anyhow::Result<FileDescriptor> {","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":650,"byte_end":705,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/   let stdout = std::io::stdout();","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":706,"byte_end":743,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/   let handle = stdout.lock();","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":744,"byte_end":777,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/   FileDescriptor::dup(&handle)","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":778,"byte_end":812,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":813,"byte_end":818,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":819,"byte_end":822,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ fn print_something() -> anyhow::Result<()> {","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":823,"byte_end":871,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/    get_stdout()?.write(b\"hello\")?;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":872,"byte_end":910,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/    Ok(())","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":911,"byte_end":924,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":925,"byte_end":930,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":931,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":939,"byte_end":942,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Pipe","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":943,"byte_end":954,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ The `Pipe` type makes it more convenient to create a pipe and manage","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":955,"byte_end":1027,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ the lifetime of both the read and write ends of that pipe.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1028,"byte_end":1090,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1091,"byte_end":1094,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1095,"byte_end":1102,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use filedescriptor::Pipe;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1103,"byte_end":1132,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/ use std::io::{Read, Write};","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1133,"byte_end":1164,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"/ use anyhow::Error;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1165,"byte_end":1187,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1188,"byte_end":1191,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let mut pipe = Pipe::new()?;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1192,"byte_end":1224,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ pipe.write.write(b\"hello\")?;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1225,"byte_end":1257,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/ drop(pipe.write);","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1258,"byte_end":1279,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1280,"byte_end":1283,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut s = String::new();","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1284,"byte_end":1314,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ pipe.read.read_to_string(&mut s)?;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1315,"byte_end":1353,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(s, \"hello\");","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1354,"byte_end":1381,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # Ok::<(), Error>(())","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1382,"byte_end":1407,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1408,"byte_end":1415,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1416,"byte_end":1419,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ## Socketpair","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1420,"byte_end":1437,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/ The `socketpair` function returns a pair of connected `SOCK_STREAM`","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1438,"byte_end":1509,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"/ sockets and functions both on posix and windows systems.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1510,"byte_end":1570,"line_start":51,"line_end":51,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1571,"byte_end":1574,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1575,"byte_end":1582,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Read, Write};","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1583,"byte_end":1614,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/ use anyhow::Error;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1615,"byte_end":1637,"line_start":55,"line_end":55,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1638,"byte_end":1641,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let (mut a, mut b) = filedescriptor::socketpair()?;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1642,"byte_end":1697,"line_start":57,"line_end":57,"column_start":1,"column_end":56}},{"value":"/ a.write(b\"hello\")?;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1698,"byte_end":1721,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/ drop(a);","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1722,"byte_end":1734,"line_start":59,"line_end":59,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1735,"byte_end":1738,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let mut s = String::new();","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1739,"byte_end":1769,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ b.read_to_string(&mut s)?;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1770,"byte_end":1800,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(s, \"hello\");","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1801,"byte_end":1828,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/ # Ok::<(), Error>(())","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1829,"byte_end":1854,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1855,"byte_end":1862,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1863,"byte_end":1866,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ## Polling","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1867,"byte_end":1881,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/ The `mio` crate offers powerful and scalable IO multiplexing, but there","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1882,"byte_end":1957,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ are some situations where `mio` doesn't fit.  The `filedescriptor` crate","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":1958,"byte_end":2034,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/ offers a `poll(2)` compatible interface suitable for testing the readiness","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2035,"byte_end":2113,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ of a set of file descriptors.  On unix systems this is a very thin wrapper","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2114,"byte_end":2192,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ around `poll(2)`, except on macOS where it is actually a wrapper around","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2193,"byte_end":2268,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ the `select(2)` interface.  On Windows systems the winsock `WSAPoll`","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2269,"byte_end":2341,"line_start":73,"line_end":73,"column_start":1,"column_end":73}},{"value":"/ function is used instead.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2342,"byte_end":2371,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2372,"byte_end":2375,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2376,"byte_end":2383,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/ use filedescriptor::*;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2384,"byte_end":2410,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/ use anyhow::Error;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2411,"byte_end":2433,"line_start":78,"line_end":78,"column_start":1,"column_end":23}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2434,"byte_end":2462,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/ use std::io::{Read, Write};","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2463,"byte_end":2494,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2495,"byte_end":2498,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let (mut a, mut b) = filedescriptor::socketpair()?;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2499,"byte_end":2554,"line_start":82,"line_end":82,"column_start":1,"column_end":56}},{"value":"/ let mut poll_array = [pollfd {","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2555,"byte_end":2589,"line_start":83,"line_end":83,"column_start":1,"column_end":35}},{"value":"/    fd: a.as_socket_descriptor(),","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2590,"byte_end":2626,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/    events: POLLIN,","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2627,"byte_end":2649,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/    revents: 0","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2650,"byte_end":2667,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/ }];","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2668,"byte_end":2675,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ // sleeps for 20 milliseconds because `a` is not yet ready","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2676,"byte_end":2738,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(poll(&mut poll_array, Some(Duration::from_millis(20)))?, 0);","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2739,"byte_end":2814,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2815,"byte_end":2818,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ b.write(b\"hello\")?;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2819,"byte_end":2842,"line_start":91,"line_end":91,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2843,"byte_end":2846,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ // Now a is ready for read","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2847,"byte_end":2877,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(poll(&mut poll_array, Some(Duration::from_millis(20)))?, 1);","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2878,"byte_end":2953,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2954,"byte_end":2957,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Ok::<(), Error>(())","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2958,"byte_end":2983,"line_start":96,"line_end":96,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":2984,"byte_end":2991,"line_start":97,"line_end":97,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":37},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":12321,"byte_end":12338,"line_start":13,"line_end":13,"column_start":10,"column_end":27},"name":"RawFileDescriptor","qualname":"::unix::RawFileDescriptor","value":"RawFd","parent":null,"children":[],"decl_id":null,"docs":" `RawFileDescriptor` is a platform independent type alias for the\n underlying platform file descriptor type.  It is primarily useful\n for avoiding using `cfg` blocks in platform independent code.\n","sig":null,"attributes":[{"value":"/ `RawFileDescriptor` is a platform independent type alias for the","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":12107,"byte_end":12175,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/ underlying platform file descriptor type.  It is primarily useful","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":12176,"byte_end":12245,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ for avoiding using `cfg` blocks in platform independent code.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":12246,"byte_end":12311,"line_start":12,"line_end":12,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":38},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":12564,"byte_end":12580,"line_start":18,"line_end":18,"column_start":10,"column_end":26},"name":"SocketDescriptor","qualname":"::unix::SocketDescriptor","value":"RawFd","parent":null,"children":[],"decl_id":null,"docs":" `SocketDescriptor` is a platform independent type alias for the\n underlying platform socket descriptor type.  It is primarily useful\n for avoiding using `cfg` blocks in platform independent code.\n","sig":null,"attributes":[{"value":"/ `SocketDescriptor` is a platform independent type alias for the","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":12349,"byte_end":12416,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ underlying platform socket descriptor type.  It is primarily useful","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":12417,"byte_end":12488,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ for avoiding using `cfg` blocks in platform independent code.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":12489,"byte_end":12554,"line_start":17,"line_end":17,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":18867,"byte_end":18870,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"new","qualname":"<Pipe>::new","value":"pub fn new() -> anyhow::Result<Pipe>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_os = \"linux\"))","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":18823,"byte_end":18855,"line_start":249,"line_end":249,"column_start":5,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":88},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":20578,"byte_end":20593,"line_start":314,"line_end":314,"column_start":8,"column_end":23},"name":"socketpair_impl","qualname":"::unix::socketpair_impl","value":"pub fn socketpair_impl() -> anyhow::Result<(FileDescriptor, FileDescriptor)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_os = \"linux\"))","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":20523,"byte_end":20555,"line_start":312,"line_end":312,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":23594,"byte_end":23603,"line_start":421,"line_end":421,"column_start":12,"column_end":21},"name":"poll_impl","qualname":"::unix::macos::poll_impl","value":"pub fn poll_impl(&mut [pollfd], Option<Duration>) -> anyhow::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":161},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3289,"byte_end":3308,"line_start":112,"line_end":112,"column_start":11,"column_end":30},"name":"AsRawFileDescriptor","qualname":"::AsRawFileDescriptor","value":"AsRawFileDescriptor","parent":null,"children":[{"krate":0,"index":162}],"decl_id":null,"docs":" `AsRawFileDescriptor` is a platform independent trait for returning\n a non-owning reference to the underlying platform file descriptor\n type.\n","sig":null,"attributes":[{"value":"/ `AsRawFileDescriptor` is a platform independent trait for returning","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3127,"byte_end":3198,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ a non-owning reference to the underlying platform file descriptor","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3199,"byte_end":3268,"line_start":110,"line_end":110,"column_start":1,"column_end":70}},{"value":"/ type.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3269,"byte_end":3278,"line_start":111,"line_end":111,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3318,"byte_end":3340,"line_start":113,"line_end":113,"column_start":8,"column_end":30},"name":"as_raw_file_descriptor","qualname":"::AsRawFileDescriptor::as_raw_file_descriptor","value":"pub fn as_raw_file_descriptor(&Self) -> RawFileDescriptor","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":163},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3525,"byte_end":3546,"line_start":118,"line_end":118,"column_start":11,"column_end":32},"name":"IntoRawFileDescriptor","qualname":"::IntoRawFileDescriptor","value":"IntoRawFileDescriptor","parent":null,"children":[{"krate":0,"index":164}],"decl_id":null,"docs":" `IntoRawFileDescriptor` is a platform independent trait for converting\n an instance into the underlying platform file descriptor type.\n","sig":null,"attributes":[{"value":"/ `IntoRawFileDescriptor` is a platform independent trait for converting","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3373,"byte_end":3447,"line_start":116,"line_end":116,"column_start":1,"column_end":75}},{"value":"/ an instance into the underlying platform file descriptor type.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3448,"byte_end":3514,"line_start":117,"line_end":117,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3556,"byte_end":3580,"line_start":119,"line_end":119,"column_start":8,"column_end":32},"name":"into_raw_file_descriptor","qualname":"::IntoRawFileDescriptor::into_raw_file_descriptor","value":"pub fn into_raw_file_descriptor(Self) -> RawFileDescriptor","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":165},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4009,"byte_end":4030,"line_start":128,"line_end":128,"column_start":11,"column_end":32},"name":"FromRawFileDescriptor","qualname":"::FromRawFileDescriptor","value":"FromRawFileDescriptor","parent":null,"children":[{"krate":0,"index":166}],"decl_id":null,"docs":" `FromRawFileDescriptor` is a platform independent trait for creating\n an instance from the underlying platform file descriptor type.\n Because the platform file descriptor type has no inherent ownership\n management, the `from_raw_file_descriptor` function is marked as unsafe\n to indicate that care must be taken by the caller to ensure that it\n is used appropriately.\n","sig":null,"attributes":[{"value":"/ `FromRawFileDescriptor` is a platform independent trait for creating","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3612,"byte_end":3684,"line_start":122,"line_end":122,"column_start":1,"column_end":73}},{"value":"/ an instance from the underlying platform file descriptor type.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3685,"byte_end":3751,"line_start":123,"line_end":123,"column_start":1,"column_end":67}},{"value":"/ Because the platform file descriptor type has no inherent ownership","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3752,"byte_end":3823,"line_start":124,"line_end":124,"column_start":1,"column_end":72}},{"value":"/ management, the `from_raw_file_descriptor` function is marked as unsafe","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3824,"byte_end":3899,"line_start":125,"line_end":125,"column_start":1,"column_end":76}},{"value":"/ to indicate that care must be taken by the caller to ensure that it","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3900,"byte_end":3971,"line_start":126,"line_end":126,"column_start":1,"column_end":72}},{"value":"/ is used appropriately.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":3972,"byte_end":3998,"line_start":127,"line_end":127,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4047,"byte_end":4071,"line_start":129,"line_end":129,"column_start":15,"column_end":39},"name":"from_raw_file_descriptor","qualname":"::FromRawFileDescriptor::from_raw_file_descriptor","value":"pub unsafe fn from_raw_file_descriptor(RawFileDescriptor) -> Self","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":167},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4117,"byte_end":4138,"line_start":132,"line_end":132,"column_start":11,"column_end":32},"name":"AsRawSocketDescriptor","qualname":"::AsRawSocketDescriptor","value":"AsRawSocketDescriptor","parent":null,"children":[{"krate":0,"index":168}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4148,"byte_end":4168,"line_start":133,"line_end":133,"column_start":8,"column_end":28},"name":"as_socket_descriptor","qualname":"::AsRawSocketDescriptor::as_socket_descriptor","value":"pub fn as_socket_descriptor(&Self) -> SocketDescriptor","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":169},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4209,"byte_end":4232,"line_start":135,"line_end":135,"column_start":11,"column_end":34},"name":"IntoRawSocketDescriptor","qualname":"::IntoRawSocketDescriptor","value":"IntoRawSocketDescriptor","parent":null,"children":[{"krate":0,"index":170}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4242,"byte_end":4264,"line_start":136,"line_end":136,"column_start":8,"column_end":30},"name":"into_socket_descriptor","qualname":"::IntoRawSocketDescriptor::into_socket_descriptor","value":"pub fn into_socket_descriptor(Self) -> SocketDescriptor","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":171},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4304,"byte_end":4327,"line_start":138,"line_end":138,"column_start":11,"column_end":34},"name":"FromRawSocketDescriptor","qualname":"::FromRawSocketDescriptor","value":"FromRawSocketDescriptor","parent":null,"children":[{"krate":0,"index":172}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4344,"byte_end":4366,"line_start":139,"line_end":139,"column_start":15,"column_end":37},"name":"from_socket_descriptor","qualname":"::FromRawSocketDescriptor::from_socket_descriptor","value":"pub unsafe fn from_socket_descriptor(SocketDescriptor) -> Self","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":197},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4715,"byte_end":4726,"line_start":147,"line_end":147,"column_start":12,"column_end":23},"name":"OwnedHandle","qualname":"::OwnedHandle","value":"OwnedHandle {  }","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"decl_id":null,"docs":" `OwnedHandle` allows managing the lifetime of the platform `RawFileDescriptor`\n type.  It is exposed in the interface of this crate primarily for convenience\n on Windows where the system handle type is used for a variety of objects\n that don't support reading and writing.\n","sig":null,"attributes":[{"value":"/ `OwnedHandle` allows managing the lifetime of the platform `RawFileDescriptor`","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4401,"byte_end":4483,"line_start":142,"line_end":142,"column_start":1,"column_end":83}},{"value":"/ type.  It is exposed in the interface of this crate primarily for convenience","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4484,"byte_end":4565,"line_start":143,"line_end":143,"column_start":1,"column_end":82}},{"value":"/ on Windows where the system handle type is used for a variety of objects","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4566,"byte_end":4642,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/ that don't support reading and writing.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4643,"byte_end":4686,"line_start":145,"line_end":145,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":5022,"byte_end":5025,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"new","qualname":"<OwnedHandle>::new","value":"pub fn new<F: IntoRawFileDescriptor>(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new handle from some object that is convertible into\n the system `RawFileDescriptor` type.  This consumes the parameter\n and replaces it with an `OwnedHandle` instance.\n","sig":null,"attributes":[{"value":"/ Create a new handle from some object that is convertible into","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4815,"byte_end":4880,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/ the system `RawFileDescriptor` type.  This consumes the parameter","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4885,"byte_end":4954,"line_start":154,"line_end":154,"column_start":5,"column_end":74}},{"value":"/ and replaces it with an `OwnedHandle` instance.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4959,"byte_end":5010,"line_start":155,"line_end":155,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":5620,"byte_end":5629,"line_start":170,"line_end":170,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<OwnedHandle>::try_clone","value":"pub fn try_clone(&Self) -> anyhow::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to duplicate the underlying handle and return an\n `OwnedHandle` wrapped around the duplicate.  Since the duplication\n requires kernel resources that may not be available, this is a\n potentially fallible operation.\n The returned handle has a separate lifetime from the source, but\n references the same object at the kernel level.\n","sig":null,"attributes":[{"value":"/ Attempt to duplicate the underlying handle and return an","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":5233,"byte_end":5293,"line_start":164,"line_end":164,"column_start":5,"column_end":65}},{"value":"/ `OwnedHandle` wrapped around the duplicate.  Since the duplication","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":5298,"byte_end":5368,"line_start":165,"line_end":165,"column_start":5,"column_end":75}},{"value":"/ requires kernel resources that may not be available, this is a","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":5373,"byte_end":5439,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"/ potentially fallible operation.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":5444,"byte_end":5479,"line_start":167,"line_end":167,"column_start":5,"column_end":40}},{"value":"/ The returned handle has a separate lifetime from the source, but","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":5484,"byte_end":5552,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/ references the same object at the kernel level.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":5557,"byte_end":5608,"line_start":169,"line_end":169,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6192,"byte_end":6195,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"dup","qualname":"<OwnedHandle>::dup","value":"pub fn dup<F: AsRawFileDescriptor>(&F) -> anyhow::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to duplicate the underlying handle from an object that is\n representable as the system `RawFileDescriptor` type and return an\n `OwnedHandle` wrapped around the duplicate.  Since the duplication\n requires kernel resources that may not be available, this is a\n potentially fallible operation.\n The returned handle has a separate lifetime from the source, but\n references the same object at the kernel level.\n","sig":null,"attributes":[{"value":"/ Attempt to duplicate the underlying handle from an object that is","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":5721,"byte_end":5790,"line_start":174,"line_end":174,"column_start":5,"column_end":74}},{"value":"/ representable as the system `RawFileDescriptor` type and return an","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":5795,"byte_end":5865,"line_start":175,"line_end":175,"column_start":5,"column_end":75}},{"value":"/ `OwnedHandle` wrapped around the duplicate.  Since the duplication","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":5870,"byte_end":5940,"line_start":176,"line_end":176,"column_start":5,"column_end":75}},{"value":"/ requires kernel resources that may not be available, this is a","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":5945,"byte_end":6011,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ potentially fallible operation.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6016,"byte_end":6051,"line_start":178,"line_end":178,"column_start":5,"column_end":40}},{"value":"/ The returned handle has a separate lifetime from the source, but","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6056,"byte_end":6124,"line_start":179,"line_end":179,"column_start":5,"column_end":73}},{"value":"/ references the same object at the kernel level.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6129,"byte_end":6180,"line_start":180,"line_end":180,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":202},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7078,"byte_end":7092,"line_start":209,"line_end":209,"column_start":12,"column_end":26},"name":"FileDescriptor","qualname":"::FileDescriptor","value":"FileDescriptor {  }","parent":null,"children":[{"krate":0,"index":203}],"decl_id":null,"docs":" `FileDescriptor` is a thin wrapper on top of the `OwnedHandle` type that\n exposes the ability to Read and Write to the platform `RawFileDescriptor`.","sig":null,"attributes":[{"value":"/ `FileDescriptor` is a thin wrapper on top of the `OwnedHandle` type that","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6308,"byte_end":6384,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ exposes the ability to Read and Write to the platform `RawFileDescriptor`.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6385,"byte_end":6463,"line_start":187,"line_end":187,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6464,"byte_end":6467,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ This is a bit of a contrived example, but demonstrates how to avoid","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6468,"byte_end":6539,"line_start":189,"line_end":189,"column_start":1,"column_end":72}},{"value":"/ the conditional code that would otherwise be required to deal with","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6540,"byte_end":6610,"line_start":190,"line_end":190,"column_start":1,"column_end":71}},{"value":"/ calling `as_raw_fd` and `as_raw_handle`:","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6611,"byte_end":6655,"line_start":191,"line_end":191,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6656,"byte_end":6659,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6660,"byte_end":6667,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/ use filedescriptor::{FileDescriptor, FromRawFileDescriptor};","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6668,"byte_end":6732,"line_start":194,"line_end":194,"column_start":1,"column_end":65}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6733,"byte_end":6756,"line_start":195,"line_end":195,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6757,"byte_end":6760,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ fn get_stdout() -> anyhow::Result<FileDescriptor> {","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6761,"byte_end":6816,"line_start":197,"line_end":197,"column_start":1,"column_end":56}},{"value":"/   let stdout = std::io::stdout();","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6817,"byte_end":6854,"line_start":198,"line_end":198,"column_start":1,"column_end":38}},{"value":"/   let handle = stdout.lock();","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6855,"byte_end":6888,"line_start":199,"line_end":199,"column_start":1,"column_end":34}},{"value":"/   FileDescriptor::dup(&handle)","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6889,"byte_end":6923,"line_start":200,"line_end":200,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6924,"byte_end":6929,"line_start":201,"line_end":201,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6930,"byte_end":6933,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ fn print_something() -> anyhow::Result<()> {","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6934,"byte_end":6982,"line_start":203,"line_end":203,"column_start":1,"column_end":49}},{"value":"/    get_stdout()?.write(b\"hello\")?;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":6983,"byte_end":7021,"line_start":204,"line_end":204,"column_start":1,"column_end":39}},{"value":"/    Ok(())","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7022,"byte_end":7035,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7036,"byte_end":7041,"line_start":206,"line_end":206,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7042,"byte_end":7049,"line_start":207,"line_end":207,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7362,"byte_end":7365,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"new","qualname":"<FileDescriptor>::new","value":"pub fn new<F: IntoRawFileDescriptor>(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new descriptor from some object that is convertible into\n the system `RawFileDescriptor` type.  This consumes the parameter\n and replaces it with a `FileDescriptor` instance.\n","sig":null,"attributes":[{"value":"/ Create a new descriptor from some object that is convertible into","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7149,"byte_end":7218,"line_start":214,"line_end":214,"column_start":5,"column_end":74}},{"value":"/ the system `RawFileDescriptor` type.  This consumes the parameter","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7223,"byte_end":7292,"line_start":215,"line_end":215,"column_start":5,"column_end":74}},{"value":"/ and replaces it with a `FileDescriptor` instance.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7297,"byte_end":7350,"line_start":216,"line_end":216,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7958,"byte_end":7961,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"dup","qualname":"<FileDescriptor>::dup","value":"pub fn dup<F: AsRawFileDescriptor>(&F) -> anyhow::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to duplicate the underlying handle from an object that is\n representable as the system `RawFileDescriptor` type and return a\n `FileDescriptor` wrapped around the duplicate.  Since the duplication\n requires kernel resources that may not be available, this is a\n potentially fallible operation.\n The returned handle has a separate lifetime from the source, but\n references the same object at the kernel level.\n","sig":null,"attributes":[{"value":"/ Attempt to duplicate the underlying handle from an object that is","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7485,"byte_end":7554,"line_start":222,"line_end":222,"column_start":5,"column_end":74}},{"value":"/ representable as the system `RawFileDescriptor` type and return a","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7559,"byte_end":7628,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ `FileDescriptor` wrapped around the duplicate.  Since the duplication","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7633,"byte_end":7706,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ requires kernel resources that may not be available, this is a","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7711,"byte_end":7777,"line_start":225,"line_end":225,"column_start":5,"column_end":71}},{"value":"/ potentially fallible operation.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7782,"byte_end":7817,"line_start":226,"line_end":226,"column_start":5,"column_end":40}},{"value":"/ The returned handle has a separate lifetime from the source, but","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7822,"byte_end":7890,"line_start":227,"line_end":227,"column_start":5,"column_end":73}},{"value":"/ references the same object at the kernel level.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7895,"byte_end":7946,"line_start":228,"line_end":228,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":8477,"byte_end":8486,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<FileDescriptor>::try_clone","value":"pub fn try_clone(&Self) -> anyhow::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to duplicate the underlying handle and return a\n `FileDescriptor` wrapped around the duplicate.  Since the duplication\n requires kernel resources that may not be available, this is a\n potentially fallible operation.\n The returned handle has a separate lifetime from the source, but\n references the same object at the kernel level.\n","sig":null,"attributes":[{"value":"/ Attempt to duplicate the underlying handle and return a","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":8088,"byte_end":8147,"line_start":233,"line_end":233,"column_start":5,"column_end":64}},{"value":"/ `FileDescriptor` wrapped around the duplicate.  Since the duplication","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":8152,"byte_end":8225,"line_start":234,"line_end":234,"column_start":5,"column_end":78}},{"value":"/ requires kernel resources that may not be available, this is a","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":8230,"byte_end":8296,"line_start":235,"line_end":235,"column_start":5,"column_end":71}},{"value":"/ potentially fallible operation.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":8301,"byte_end":8336,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/ The returned handle has a separate lifetime from the source, but","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":8341,"byte_end":8409,"line_start":237,"line_end":237,"column_start":5,"column_end":73}},{"value":"/ references the same object at the kernel level.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":8414,"byte_end":8465,"line_start":238,"line_end":238,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":8857,"byte_end":8865,"line_start":247,"line_end":247,"column_start":12,"column_end":20},"name":"as_stdio","qualname":"<FileDescriptor>::as_stdio","value":"pub fn as_stdio(&Self) -> anyhow::Result<std::process::Stdio>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method for creating a `std::process::Stdio` object\n to be used for eg: redirecting the stdio streams of a child\n process.  The `Stdio` is created using a duplicated handle so\n that the source handle remains alive.\n","sig":null,"attributes":[{"value":"/ A convenience method for creating a `std::process::Stdio` object","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":8593,"byte_end":8661,"line_start":243,"line_end":243,"column_start":5,"column_end":73}},{"value":"/ to be used for eg: redirecting the stdio streams of a child","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":8666,"byte_end":8729,"line_start":244,"line_end":244,"column_start":5,"column_end":68}},{"value":"/ process.  The `Stdio` is created using a duplicated handle so","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":8734,"byte_end":8799,"line_start":245,"line_end":245,"column_start":5,"column_end":70}},{"value":"/ that the source handle remains alive.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":8804,"byte_end":8845,"line_start":246,"line_end":246,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9357,"byte_end":9373,"line_start":257,"line_end":257,"column_start":12,"column_end":28},"name":"set_non_blocking","qualname":"<FileDescriptor>::set_non_blocking","value":"pub fn set_non_blocking(&mut Self, bool) -> anyhow::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to change the non-blocking IO mode of the file descriptor.\n Not all kinds of file descriptor can be placed in non-blocking mode\n on all systems, and some file descriptors will claim to be in\n non-blocking mode but it will have no effect.\n File descriptors based on sockets are the most portable type\n that can be successfully made non-blocking.\n","sig":null,"attributes":[{"value":"/ Attempt to change the non-blocking IO mode of the file descriptor.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":8954,"byte_end":9024,"line_start":251,"line_end":251,"column_start":5,"column_end":75}},{"value":"/ Not all kinds of file descriptor can be placed in non-blocking mode","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9029,"byte_end":9100,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ on all systems, and some file descriptors will claim to be in","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9105,"byte_end":9170,"line_start":253,"line_end":253,"column_start":5,"column_end":70}},{"value":"/ non-blocking mode but it will have no effect.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9175,"byte_end":9224,"line_start":254,"line_end":254,"column_start":5,"column_end":54}},{"value":"/ File descriptors based on sockets are the most portable type","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9229,"byte_end":9293,"line_start":255,"line_end":255,"column_start":5,"column_end":69}},{"value":"/ that can be successfully made non-blocking.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9298,"byte_end":9345,"line_start":256,"line_end":256,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":189},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9926,"byte_end":9930,"line_start":279,"line_end":279,"column_start":12,"column_end":16},"name":"Pipe","qualname":"::Pipe","value":"Pipe { read, write }","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191}],"decl_id":null,"docs":" Represents the readable and writable ends of a pair of descriptors\n connected via a kernel pipe.","sig":null,"attributes":[{"value":"/ Represents the readable and writable ends of a pair of descriptors","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9487,"byte_end":9557,"line_start":262,"line_end":262,"column_start":1,"column_end":71}},{"value":"/ connected via a kernel pipe.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9558,"byte_end":9590,"line_start":263,"line_end":263,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9591,"byte_end":9594,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9595,"byte_end":9602,"line_start":265,"line_end":265,"column_start":1,"column_end":8}},{"value":"/ use filedescriptor::Pipe;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9603,"byte_end":9632,"line_start":266,"line_end":266,"column_start":1,"column_end":30}},{"value":"/ use std::io::{Read,Write};","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9633,"byte_end":9663,"line_start":267,"line_end":267,"column_start":1,"column_end":31}},{"value":"/ use anyhow::Error;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9664,"byte_end":9686,"line_start":268,"line_end":268,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9687,"byte_end":9690,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ let mut pipe = Pipe::new()?;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9691,"byte_end":9723,"line_start":270,"line_end":270,"column_start":1,"column_end":33}},{"value":"/ pipe.write.write(b\"hello\")?;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9724,"byte_end":9756,"line_start":271,"line_end":271,"column_start":1,"column_end":33}},{"value":"/ drop(pipe.write);","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9757,"byte_end":9778,"line_start":272,"line_end":272,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9779,"byte_end":9782,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ let mut s = String::new();","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9783,"byte_end":9813,"line_start":274,"line_end":274,"column_start":1,"column_end":31}},{"value":"/ pipe.read.read_to_string(&mut s)?;","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9814,"byte_end":9852,"line_start":275,"line_end":275,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(s, \"hello\");","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9853,"byte_end":9880,"line_start":276,"line_end":276,"column_start":1,"column_end":28}},{"value":"/ # Ok::<(), Error>(())","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9881,"byte_end":9906,"line_start":277,"line_end":277,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9907,"byte_end":9914,"line_start":278,"line_end":278,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":190},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9978,"byte_end":9982,"line_start":281,"line_end":281,"column_start":9,"column_end":13},"name":"read","qualname":"::Pipe::read","value":"FileDescriptor","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The readable end of the pipe\n","sig":null,"attributes":[{"value":"/ The readable end of the pipe","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":9937,"byte_end":9969,"line_start":280,"line_end":280,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":191},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10045,"byte_end":10050,"line_start":283,"line_end":283,"column_start":9,"column_end":14},"name":"write","qualname":"::Pipe::write","value":"FileDescriptor","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The writable end of the pipe\n","sig":null,"attributes":[{"value":"/ The writable end of the pipe","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10004,"byte_end":10036,"line_start":282,"line_end":282,"column_start":5,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":195},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11507,"byte_end":11511,"line_start":315,"line_end":315,"column_start":8,"column_end":12},"name":"poll","qualname":"::poll","value":"pub fn poll(&mut [pollfd], Option<Duration>) -> anyhow::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Examines a set of FileDescriptors to see if some of them are ready for I/O,\n or if certain events have occurred on them.","sig":null,"attributes":[{"value":"/ Examines a set of FileDescriptors to see if some of them are ready for I/O,","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10097,"byte_end":10176,"line_start":288,"line_end":288,"column_start":1,"column_end":80}},{"value":"/ or if certain events have occurred on them.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10177,"byte_end":10224,"line_start":289,"line_end":289,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10225,"byte_end":10228,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ This uses the system native readiness checking mechanism, which on Windows","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10229,"byte_end":10307,"line_start":291,"line_end":291,"column_start":1,"column_end":79}},{"value":"/ means that it does NOT use IOCP and that this only works with sockets on","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10308,"byte_end":10384,"line_start":292,"line_end":292,"column_start":1,"column_end":77}},{"value":"/ Windows.  If you need IOCP then the `mio` crate is recommended for a much","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10385,"byte_end":10462,"line_start":293,"line_end":293,"column_start":1,"column_end":78}},{"value":"/ more scalable solution.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10463,"byte_end":10490,"line_start":294,"line_end":294,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10491,"byte_end":10494,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ On macOS, the `poll(2)` implementation has problems when used with eg: pty","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10495,"byte_end":10573,"line_start":296,"line_end":296,"column_start":1,"column_end":79}},{"value":"/ descriptors, so this implementation of poll uses the `select(2)` interface","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10574,"byte_end":10652,"line_start":297,"line_end":297,"column_start":1,"column_end":79}},{"value":"/ under the covers.  That places a limit on the maximum file descriptor value","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10653,"byte_end":10732,"line_start":298,"line_end":298,"column_start":1,"column_end":80}},{"value":"/ that can be passed to poll.  If a file descriptor is out of range then an","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10733,"byte_end":10810,"line_start":299,"line_end":299,"column_start":1,"column_end":78}},{"value":"/ error will returned.  This limitation could potentially be lifted in the","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10811,"byte_end":10887,"line_start":300,"line_end":300,"column_start":1,"column_end":77}},{"value":"/ future.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10888,"byte_end":10899,"line_start":301,"line_end":301,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10900,"byte_end":10903,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ On Windows, `WSAPoll` is used to implement readiness checking, which has","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10904,"byte_end":10980,"line_start":303,"line_end":303,"column_start":1,"column_end":77}},{"value":"/ the consequence that it can only be used with sockets.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":10981,"byte_end":11039,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11040,"byte_end":11043,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ If `duration` is `None`, then `poll` will block until any of the requested","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11044,"byte_end":11122,"line_start":306,"line_end":306,"column_start":1,"column_end":79}},{"value":"/ events are ready.  Otherwise, `duration` specifies how long to wait for","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11123,"byte_end":11198,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"/ readiness before giving up.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11199,"byte_end":11230,"line_start":308,"line_end":308,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11231,"byte_end":11234,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ The return value is the number of entries that were satisfied; `0` means","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11235,"byte_end":11311,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"/ that none were ready after waiting for the specified duration.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11312,"byte_end":11378,"line_start":311,"line_end":311,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11379,"byte_end":11382,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ The `pfd` array is mutated and the `revents` field is updated to indicate","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11383,"byte_end":11460,"line_start":313,"line_end":313,"column_start":1,"column_end":78}},{"value":"/ which of the events were received.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11461,"byte_end":11499,"line_start":314,"line_end":314,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":196},"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11732,"byte_end":11742,"line_start":322,"line_end":322,"column_start":8,"column_end":18},"name":"socketpair","qualname":"::socketpair","value":"pub fn socketpair() -> anyhow::Result<(FileDescriptor, FileDescriptor)>","parent":null,"children":[],"decl_id":null,"docs":" Create a pair of connected sockets","sig":null,"attributes":[{"value":"/ Create a pair of connected sockets","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11619,"byte_end":11657,"line_start":319,"line_end":319,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11658,"byte_end":11661,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ This implementation creates a pair of SOCK_STREAM sockets.","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":11662,"byte_end":11724,"line_start":321,"line_end":321,"column_start":1,"column_end":63}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":12632,"byte_end":12633,"line_start":20,"line_end":20,"column_start":42,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":12775,"byte_end":12776,"line_start":26,"line_end":26,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":12921,"byte_end":12922,"line_start":32,"line_end":32,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":13079,"byte_end":13080,"line_start":38,"line_end":38,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":13221,"byte_end":13222,"line_start":44,"line_end":44,"column_start":48,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":13366,"byte_end":13367,"line_start":50,"line_end":50,"column_start":48,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":13492,"byte_end":13503,"line_start":56,"line_end":56,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":13622,"byte_end":13633,"line_start":64,"line_end":64,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":13719,"byte_end":13730,"line_start":70,"line_end":70,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":13870,"byte_end":13881,"line_start":78,"line_end":78,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":14023,"byte_end":14034,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":16124,"byte_end":16138,"line_start":154,"line_end":154,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":16479,"byte_end":16493,"line_start":165,"line_end":165,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":16900,"byte_end":16914,"line_start":179,"line_end":179,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":17012,"byte_end":17026,"line_start":185,"line_end":185,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":17127,"byte_end":17141,"line_start":191,"line_end":191,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":17280,"byte_end":17294,"line_start":199,"line_end":199,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":18031,"byte_end":18035,"line_start":222,"line_end":222,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":22583,"byte_end":22588,"line_start":384,"line_end":384,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4797,"byte_end":4808,"line_start":152,"line_end":152,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7128,"byte_end":7142,"line_start":213,"line_end":213,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":12632,"byte_end":12633,"line_start":20,"line_end":20,"column_start":42,"column_end":43},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":40},"to":{"krate":0,"index":161}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":12775,"byte_end":12776,"line_start":26,"line_end":26,"column_start":46,"column_end":47},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":43},"to":{"krate":0,"index":163}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":12921,"byte_end":12922,"line_start":32,"line_end":32,"column_start":46,"column_end":47},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":46},"to":{"krate":0,"index":165}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":13079,"byte_end":13080,"line_start":38,"line_end":38,"column_start":44,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":49},"to":{"krate":0,"index":167}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":13221,"byte_end":13222,"line_start":44,"line_end":44,"column_start":48,"column_end":49},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":52},"to":{"krate":0,"index":169}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":13366,"byte_end":13367,"line_start":50,"line_end":50,"column_start":48,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":55},"to":{"krate":0,"index":171}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":13492,"byte_end":13503,"line_start":56,"line_end":56,"column_start":15,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":13622,"byte_end":13633,"line_start":64,"line_end":64,"column_start":18,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":197},"to":{"krate":1,"index":5588}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":13719,"byte_end":13730,"line_start":70,"line_end":70,"column_start":20,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":197},"to":{"krate":1,"index":5592}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":13870,"byte_end":13881,"line_start":78,"line_end":78,"column_start":20,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":197},"to":{"krate":1,"index":5590}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":14023,"byte_end":14034,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":16124,"byte_end":16138,"line_start":154,"line_end":154,"column_start":24,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":202},"to":{"krate":1,"index":4311}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":16479,"byte_end":16493,"line_start":165,"line_end":165,"column_start":25,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":202},"to":{"krate":1,"index":4372}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":16900,"byte_end":16914,"line_start":179,"line_end":179,"column_start":18,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":202},"to":{"krate":1,"index":5588}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":17012,"byte_end":17026,"line_start":185,"line_end":185,"column_start":20,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":202},"to":{"krate":1,"index":5592}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":17127,"byte_end":17141,"line_start":191,"line_end":191,"column_start":20,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":202},"to":{"krate":1,"index":5590}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":17280,"byte_end":17294,"line_start":199,"line_end":199,"column_start":6,"column_end":20},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":18031,"byte_end":18035,"line_start":222,"line_end":222,"column_start":6,"column_end":10},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/unix.rs","byte_start":22583,"byte_end":22588,"line_start":384,"line_end":384,"column_start":10,"column_end":15},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":4797,"byte_end":4808,"line_start":152,"line_end":152,"column_start":6,"column_end":17},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/bailej9/.cargo/registry/src/github.com-1ecc6299db9ec823/filedescriptor-0.7.3/src/lib.rs","byte_start":7128,"byte_end":7142,"line_start":213,"line_end":213,"column_start":6,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}}]}